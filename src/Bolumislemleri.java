
import java.sql.*;
import javax.swing.JOptionPane;
/**
 *
 * @author Osman Karadeniz
 */
public class Bolumislemleri extends javax.swing.JFrame {
 Connection conn;
 ResultSet rs;
 PreparedStatement pst;
 PreparedStatement pst2;
    /**
     * Creates new form Bolumislemleri
     */
    public Bolumislemleri() {
        initComponents();
        conn = javabaglanti.BaglantiDb();
        fakulte_getir();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        geri = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        fakulte_sil = new javax.swing.JComboBox<>();
        bolum_sil = new javax.swing.JComboBox<>();
        bolum_adi_ekle = new javax.swing.JTextField();
        ekle = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        fakulte_ekle = new javax.swing.JComboBox<>();
        sil = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        fakulte_guncelle = new javax.swing.JComboBox<>();
        bolum_guncelle = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        bolum_adi_guncelle = new javax.swing.JTextField();
        guncelle = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        hakkinda = new javax.swing.JMenu();
        hakkimizda = new javax.swing.JMenuItem();
        cikis = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fırat Üniversitesi Kütüphane Otomasyonu");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(155, 30, 72));

        geri.setBackground(new java.awt.Color(255, 255, 255));
        geri.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        geri.setText("<< Geri Dön");
        geri.setFocusable(false);
        geri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geriActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("BÖLÜM ( EKLE / SİL / GÜNCELLE)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(geri)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(geri)
                .addContainerGap())
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Bölüm Adı :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 80, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Bölüm :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, 60, 30));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Fakülte :");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, 60, 30));

        fakulte_sil.setFocusable(false);
        fakulte_sil.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                fakulte_silPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(fakulte_sil, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 220, 30));

        bolum_sil.setEnabled(false);
        bolum_sil.setFocusable(false);
        getContentPane().add(bolum_sil, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 220, 30));
        getContentPane().add(bolum_adi_ekle, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 220, 30));

        ekle.setBackground(new java.awt.Color(255, 255, 255));
        ekle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ekle.setText("EKLE");
        ekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ekleActionPerformed(evt);
            }
        });
        getContentPane().add(ekle, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, 150, 70));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Fakülte :");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 70, 60, 30));

        fakulte_ekle.setFocusable(false);
        fakulte_ekle.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                fakulte_eklePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(fakulte_ekle, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 220, 30));

        sil.setBackground(new java.awt.Color(255, 255, 255));
        sil.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        sil.setText("SİL");
        sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                silActionPerformed(evt);
            }
        });
        getContentPane().add(sil, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 180, 150, 70));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Bölüm :");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, 60, 30));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Fakülte :");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, 60, 30));

        fakulte_guncelle.setFocusable(false);
        fakulte_guncelle.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                fakulte_guncellePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(fakulte_guncelle, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, 220, 30));

        bolum_guncelle.setEnabled(false);
        bolum_guncelle.setFocusable(false);
        getContentPane().add(bolum_guncelle, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 330, 220, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Yeni Bölüm Adı :");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, -1, 30));
        getContentPane().add(bolum_adi_guncelle, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, 220, 30));

        guncelle.setBackground(new java.awt.Color(255, 255, 255));
        guncelle.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        guncelle.setText("GÜNCELLE");
        guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guncelleActionPerformed(evt);
            }
        });
        getContentPane().add(guncelle, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 290, 150, 110));

        hakkinda.setText("Sistem");
        hakkinda.setAutoscrolls(true);
        hakkinda.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        hakkinda.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        hakkinda.setInheritsPopupMenu(true);

        hakkimizda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resim/bilgi.png"))); // NOI18N
        hakkimizda.setText("Proje Hakkında");
        hakkinda.add(hakkimizda);

        cikis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resim/cikis.png"))); // NOI18N
        cikis.setText("Çıkış Yap");
        cikis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cikisActionPerformed(evt);
            }
        });
        hakkinda.add(cikis);

        jMenuBar1.add(hakkinda);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(587, 488));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
   
    void temizle()
    {
    fakulte_ekle.setSelectedIndex(0);
    bolum_adi_ekle.setText("");
    
    fakulte_sil.setSelectedIndex(0);
    bolum_sil.removeAllItems();
    bolum_sil.setEnabled(false);
    
    fakulte_guncelle.setSelectedIndex(0);
    bolum_guncelle.removeAllItems();
    bolum_guncelle.setEnabled(false);
    bolum_adi_guncelle.setText("");
    
    }
    
    private void geriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geriActionPerformed
        setVisible(false);
        new Ogrenciislemleri().setVisible(true);
    }//GEN-LAST:event_geriActionPerformed

    private void cikisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cikisActionPerformed
        setVisible(false);

        Giris girisform = new Giris();
        girisform.setVisible(true);
    }//GEN-LAST:event_cikisActionPerformed
 
    
    static String secilen_fakulte_sil;
    
    private void fakulte_silPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_fakulte_silPopupMenuWillBecomeInvisible
    
        secilen_fakulte_sil = fakulte_sil.getSelectedItem().toString();

        if(secilen_fakulte_sil.equals("Seç"))
        {
            bolum_sil.setEnabled(false);
            bolum_sil.removeAllItems();
        }
        else
        {
            bolum_sil.setEnabled(true);
            bolum_getir(secilen_fakulte_sil,"sil");
        }      
        
    }//GEN-LAST:event_fakulte_silPopupMenuWillBecomeInvisible

    private void ekleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ekleActionPerformed
        String fakulte_adi = fakulte_ekle.getSelectedItem().toString().trim();

        if (!(fakulte_adi.equals("Seç"))) {
            try {

                int fakulte_id = -1;
                String sql = "select fakulte_id from fakulteler where fakulte_adi='" + fakulte_adi + "'";
                pst = conn.prepareStatement(sql);
                rs = pst.executeQuery();

                while (rs.next()) {
                    fakulte_id = genelfonksiyonlar.sayiya_cevir(rs.getString("fakulte_id"));
                }
                pst.close();
                rs.close();

                String bolum_adi = bolum_adi_ekle.getText().trim();
                String sql0 = "insert into bolumler values (null,?," + fakulte_id + ")";
                String sql1 = "select * from bolumler where bolum_adi='" + bolum_adi + "'";

                if (!(bolum_adi.isBlank())) {
                    pst = conn.prepareStatement(sql1);
                    rs = pst.executeQuery();

                    if (rs.next()) {
                        JOptionPane.showMessageDialog(null, "Bölüm Eklenemedi! -> Bölüm Zaten Mevcut. ");
                    } else {
                        pst = conn.prepareStatement(sql0);
                        pst.setString(1, bolum_adi);
                        pst.execute();
                        JOptionPane.showMessageDialog(null, "Bölüm Ekleme Başarılı !");
                        bolum_adi_ekle.setText("");
                        fakulte_getir();
                        pst.close();
                    }
                    rs.close();
                } else {
                    JOptionPane.showMessageDialog(null, "Bölüm Eklenemedi ! -> Bölüm Adı Alanı Boş Bırakılamaz ! ");
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "VERİ TABANI BAĞLANTISI BAŞARISIZ !: " + e.getSQLState());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Lütfen Bir Fakülte Seçiniz !");

        }

        temizle();
    }//GEN-LAST:event_ekleActionPerformed

    private void fakulte_eklePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_fakulte_eklePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_fakulte_eklePopupMenuWillBecomeInvisible

    private void silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_silActionPerformed

        String bolum_adi = (String) bolum_sil.getSelectedItem();
        String fakulte_adi = (String) fakulte_sil.getSelectedItem();

        if (!(fakulte_adi.equals("Seç"))) {
            String sql = "DELETE FROM bolumler where fakulte_id IN (select fakulte_id from fakulteler where fakulte_adi='" + fakulte_adi.trim() + "') and bolum_adi='" + bolum_adi + "'";
            String sql2 = "delete from ogrenciler where bolum_id in(select bolum_id from bolumler where bolum_adi='" + bolum_adi.trim() + "')";

            if (!(bolum_adi.equals("Seç")) && !(bolum_adi.equals("BÖLÜM BULUNAMADI !"))) {

                try {

                    int kontrol_0 = JOptionPane.showConfirmDialog(null, "DİKKAT ! -> SİLMEK ÜZERE OLDUĞUNUZ BÖLÜM İLE BİRLİKTE\nBÖLÜME AİT ÖĞRENCİLER'DE SİLİNECEKTİR !\nBu işleme devam etmek istiyormusunuz ?");
                    int kontrol_1 = -1;

                    if (kontrol_0 == 0) {
                        kontrol_1 = JOptionPane.showConfirmDialog(null, bolum_adi + " Bölümünü Silmeyi Onaylıyorum");
                    }

                    if (kontrol_1 == 0) {

                        //BAĞIMLI DEĞİŞKENLERDEN BAĞIMSIZA DOĞRU SİLEREK GİDİYORUZ.
                        pst = conn.prepareStatement(sql2);
                        pst.execute();
                        pst.close();

                        pst2 = conn.prepareStatement(sql);
                        pst2.execute();
                        pst2.close();

                        JOptionPane.showMessageDialog(null, "SİLME İŞLEMİ BAŞARILI !");

                        fakulte_getir();
                        bolum_sil.removeAllItems();
                        bolum_sil.setEnabled(false);

                    } else {
                        JOptionPane.showMessageDialog(null, "Silme İşlemi İptal Edildi !");
                    }

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "VERİ TABANI BAĞLANTISI BAŞARISIZ !: " + e.getSQLState());
                    e.printStackTrace();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Lütfen Bir Bölüm Seçiniz !");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Lütfen Bir Fakülte Seçiniz !");

        }
        temizle();
    }//GEN-LAST:event_silActionPerformed

    static String  fakulte_guncelle_secilen;
    private void fakulte_guncellePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_fakulte_guncellePopupMenuWillBecomeInvisible
       
        fakulte_guncelle_secilen = fakulte_guncelle.getSelectedItem().toString();

        if(fakulte_guncelle_secilen.equals("Seç"))
        {
            bolum_guncelle.setEnabled(false);
            bolum_guncelle.removeAllItems();
            bolum_adi_guncelle.setText("");
        }
        else
        {
            bolum_guncelle.setEnabled(true);
            bolum_getir(fakulte_guncelle_secilen,"guncelle");

        }   
        
        
    }//GEN-LAST:event_fakulte_guncellePopupMenuWillBecomeInvisible

    private void guncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guncelleActionPerformed
       
        
        String fakulte_adi = fakulte_guncelle.getSelectedItem().toString().trim();      
            
            if (!(fakulte_adi.equals("Seç"))) {
        
        String eski_bolum_adi = bolum_guncelle.getSelectedItem().toString().trim();
       
             if (!(eski_bolum_adi.equals("Seç") || eski_bolum_adi.equals("BÖLÜM BULUNAMADI !"))) {
                    String yeni_bolum_adi = bolum_adi_guncelle.getText().trim();
                 if(!(yeni_bolum_adi.isBlank()))
                 {
                   
                     
        try 
            {
         
            
            //SEÇİLEN FAKÜLTE ID BULMA İŞLEMLERİ START
            int fakulte_id = -1;
            String sorgu= "select fakulte_id from fakulteler where fakulte_adi='" + fakulte_adi + "'";
                pst = conn.prepareStatement(sorgu);
                rs = pst.executeQuery();

                while (rs.next()) {
                    fakulte_id = genelfonksiyonlar.sayiya_cevir(rs.getString("fakulte_id"));
                }
                pst.close();
                rs.close();
            //SEÇİLEN FAKÜLTE ID BULMA İŞLEMLERİ STOP

            String sql;

            sql = "select * from bolumler where fakulte_id in(select fakulte_id from fakulteler where bolum_adi='"+yeni_bolum_adi+"')";
          
            boolean kontrol_mevcutmu = false;
            // false'ü yeni girilen bölüm adı seçilen fakültede var olmadığını ifade ettiğini farz edelim.

            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();

            if (rs.next()) {
                JOptionPane.showMessageDialog(null, "Bu Bölüm Seçilen Fakültede zaten mevcut !");
                kontrol_mevcutmu = true;
            } else {
                kontrol_mevcutmu = false;
            }

            if (kontrol_mevcutmu != true) {
                    
                sql = "update bolumler set bolum_adi=? where bolum_adi='"+eski_bolum_adi+"'and fakulte_id in (select fakulte_id from fakulteler where fakulte_adi='"+fakulte_adi+"')";
                    pst = conn.prepareStatement(sql);
                    pst.setString(1,yeni_bolum_adi);

                    int deger = JOptionPane.showConfirmDialog(null, "DİKKAT ! ->Bölüm adı güncellemesi ile birlikte\nBölüme ait Öğrenciler'de etkilenecektir.\nİşleme devam etmek istiyormusunuz ?");

                    if(deger==0)
                    {
                        pst.executeUpdate();
                        JOptionPane.showMessageDialog(null, "BÖLÜM ADI GÜNCELLENDİ !");

                        bolum_adi_guncelle.setText("");
                        fakulte_guncelle.setSelectedItem(0);
                    }
                    else
                    JOptionPane.showMessageDialog(null, "İŞLEM İPTAL EDİLDİ !");
                    pst.close();

                    bolum_getir(fakulte_adi,"guncelle");
                
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "VERİ TABANI HATA !: " + e.getSQLState());
            e.printStackTrace();
        }}
                 else
                 {
                 JOptionPane.showMessageDialog(null,"Yeni Bölüm Adı Alanı Boş Bırakılamaz !");
                 }
            }
             else
             {
             JOptionPane.showMessageDialog(null, "Lütfen Bir Bölüm Seçiniz !");
             }
            }
             else {
            JOptionPane.showMessageDialog(null, "Lütfen Bir Fakülte Seçiniz !");
        }
            temizle();
    }//GEN-LAST:event_guncelleActionPerformed

    void fakulte_getir() {
        
        fakulte_ekle.removeAllItems();
        fakulte_ekle.addItem("Seç");
        fakulte_ekle.setSelectedIndex(0);
        
        fakulte_sil.removeAllItems();
        fakulte_sil.addItem("Seç");
        fakulte_sil.setSelectedIndex(0);
        
        
        fakulte_guncelle.removeAllItems();
        fakulte_guncelle.addItem("Seç");
        fakulte_guncelle.setSelectedIndex(0);
        
        try {

            String sql = "select fakulte_adi from fakulteler";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();

            while (rs.next()) {
                fakulte_sil.addItem(rs.getString("fakulte_adi"));
                fakulte_ekle.addItem(rs.getString("fakulte_adi"));
                fakulte_guncelle.addItem(rs.getString("fakulte_adi"));
                
            }
            pst.close();
            rs.close();
            

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "VERİ TABANI BAĞLANTISI BAŞARISIZ !: " + e.getSQLState());
        }
    }
     
    void bolum_getir(String fakulte_adi,String cagiran) {

        if(cagiran.equals("sil"))
        {
        bolum_sil.removeAllItems();
        bolum_sil.addItem("Seç");
        bolum_sil.setSelectedIndex(0);
        }
        
        if(cagiran.equals("guncelle"))
        {
        bolum_guncelle.removeAllItems();
        bolum_guncelle.addItem("Seç");
        bolum_guncelle.setSelectedIndex(0);
        }
        
        try {

            String sql = "select bolum_adi from bolumler where fakulte_id in (select fakulte_id from fakulteler where fakulte_adi='"+fakulte_adi+"')";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();
            int say=0;

                
            while (rs.next()) {
                
                if(cagiran.equals("sil"))
                        bolum_sil.addItem(rs.getString("bolum_adi"));
                
                if(cagiran.equals("guncelle"))
                        bolum_guncelle.addItem(rs.getString("bolum_adi"));
                say++;
            }
            
            if(say==0)
            {// BÖLÜM YOK
                  if(cagiran.equals("sil"))
                    {
                        bolum_sil.removeAllItems();
                        bolum_sil.addItem("BÖLÜM BULUNAMADI !");
                    }
                
                if(cagiran.equals("guncelle"))
                { 
                    bolum_guncelle.removeAllItems();
                    bolum_guncelle.addItem("BÖLÜM BULUNAMADI !");
                }
                
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "VERİ TABANI BAĞLANTISI BAŞARISIZ !: " + e.getSQLState());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bolumislemleri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bolumislemleri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bolumislemleri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bolumislemleri.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bolumislemleri().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bolum_adi_ekle;
    private javax.swing.JTextField bolum_adi_guncelle;
    private javax.swing.JComboBox<String> bolum_guncelle;
    private javax.swing.JComboBox<String> bolum_sil;
    private javax.swing.JMenuItem cikis;
    private javax.swing.JButton ekle;
    private javax.swing.JComboBox<String> fakulte_ekle;
    private javax.swing.JComboBox<String> fakulte_guncelle;
    private javax.swing.JComboBox<String> fakulte_sil;
    private javax.swing.JButton geri;
    private javax.swing.JButton guncelle;
    private javax.swing.JMenuItem hakkimizda;
    private javax.swing.JMenu hakkinda;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton sil;
    // End of variables declaration//GEN-END:variables
}
